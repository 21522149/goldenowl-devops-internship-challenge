name: CI/CD Pipeline

on:
  push:
    branches:
      - master        
      - "feature"
  pull_request:
      branches:
        - master        

env:
  ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
  ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
  AWS_REGION: ${{ secrets.AWS_REGION }}

jobs:
  # CI (TEST)
  test:
    name: Run CI Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18 

      - name: Install dependencies
        run: cd src && npm i

      - name: Run tests
        run: cd src && npm test 

  # CI (BUILD) TRÊN MASTER BRANCH

  build-and-push:
    name: Build, Scan, and Push to ECR
  
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ github.sha }} 
    env:
      IMAGE_TAG: ${{ github.sha }}
      IMAGE_NAME: 891376958028.dkr.ecr.ap-southeast-2.amazonaws.com/go_challenge

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1


      - name: Build and tag image
        run: |
          docker build -t $IMAGE_NAME:$IMAGE_TAG .
          docker tag $IMAGE_NAME:$IMAGE_TAG $IMAGE_NAME:latest
        


      - name: Push image to Amazon ECR
        id: push-image
        run: |

          docker push $IMAGE_NAME:$IMAGE_TAG
          docker push $IMAGE_NAME:latest

  # CD (DEPLOY) LÊN EC2 TỪ MASTER BRANCH
  deploy:
    name: Deploy to EC2
    runs-on: ubuntu-latest

    if: github.ref == 'refs/heads/master'
    
    needs: build-and-push 

    steps:
      - name: Deploy to EC2 instance via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script: |
            export IMAGE_NAME=891376958028.dkr.ecr.ap-southeast-2.amazonaws.com/go_challenge:latest
            
            # Login vào ECR (sử dụng IAM Role của EC2)
            aws ecr get-login-password --region ap-southeast-2 | docker login --username AWS --password-stdin 891376958028.dkr.ecr.ap-southeast-2.amazonaws.com
            
            # Dừng và xóa container cũ (nếu có)
            sudo docker stop go_challenge || true
            sudo docker rm go_challenge || true

            sudo docker pull $IMAGE_NAME
            
            sudo docker run -d -p 80:3000 --name go_challenge $IMAGE_NAME